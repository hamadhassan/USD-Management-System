<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCreateAccount.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAKUAAAClAXDE3lUAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADEUlEQVRIS5XTTUyScRwH8Md8DTQRRRAtiRAjt2zVWmud6thc89Kx1aFDl+apdelQ5zro6oCWGLRw
        UOHLfEsSmCxBUR7Sh/kyX9B8w0QnlknOf79/Sf31+Ut4+DD5/r6/37M9TAYhFNPpBb1Qs6a9rwlr32nW
        qqdOhbXjmnCNSbNeU6FCVam0HRI1jDq5VntJvVo7Vrxai3Zsggjx3V+8+vI8bTeKGmKq5dcX1V/1WwAB
        nXrRUHoOaZNVY1WpqiXDWfWSvn5nFikK6s7QbmDUUD7XLFAtGEcBKpo33qJ1MNVi/d3fnQWjDz+c1uEF
        mHLOXKGcNaMTX97qaXOSctZkwV1wmzbnBZhiqsGoCFjQ8RnLBdqcdCxguYq7hYGGatqcF2CF480jYKtg
        xnSYNicpJi0i6G4DljbnBdjR0TYP2M4ZbsygzUmysVYJdBFw0+a8AMvnrE/y/VYk5zov0+akfH/nNdwt
        8Fuf0ea8AJMP2cvyBu0ItNDmUfCRAB0H7soGHTf26fBDuccjyPM6WZnXiaQDzgcQJuzt4EzGOh/hDnDQ
        Ojs9fojleDx5uX2uKYBy+3qs0t6eMklvr0zschXkut3lkDv/zFxhSf8nFe0GRg2jst39V3Jc/Wh/AzZp
        X5+SthtFDUU9XoW421ctdvo2ASKsg25x9+en2d1sOZSpr4XEC7LsQ2VZdm4VIBAS27lKkcN/U9zFlTAm
        lLi3HyWycS+yHJxdYuPSyXxX6UjX6L3MjyPbAGV2jbTlfBiWk/NYYIfFeyLbpIjM//4hbJ8ozeiYiKR3
        THzLaJ+4Q5biAbssoD+AsaEkYWvAK2ydRoLWmQMfx4Qt0yzeF1koDxA0zj8UNM0h0EYOYxE0zT6HPkvY
        APjGIJGxjNAUlKW9D0ZASNC4FPc7T7ME22EH/Q+TYl65nmIOoWTzciXt0H4YLUpmdJNpUXDDh+8I3yxK
        yZxJMoYfA5RYv36TdihecIPFdxjdyu7fINGw0QJQSt1mCTk4qEOG7yy+w3tAwqvIVELdz1Csf6J4wA03
        +AGvLvNfjphfJxQlNbl26DsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAM4AAADOAZT+k6AAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABLklEQVRIS6WVMW7CMBRALdHCRbp1RHZWFGfpAXIY2Npj0E6lVVUBaruUnooBp+po/o/yKxNZzs/3
        kyyBg98jwRbq15pVU5mjK4u1XyyuVCboQBc6G1ssMeAaa3w7SvOeE8G16Pj3WXNSUNkEE+JIRO7hLp6V
        r2+nzpqP8ALc1dbP59fd2kF8XU9A/ho64It/+7ubWfcBeWRQTkgibDkxJjJaTnAiYjmRimTLiXhE75pS
        v4VzIjkRi1yODDnRRT77cnhkh2w50j5z238sEKj0nnNOksR/0CDCPIxRovLK/LhKf4VzokhqK3LOSRLO
        PhdHOHJidGSMnGBHJHJiMJIjJ5IRePMUXsBtiAu6tWzaSG8LQ/Tx4k9fKicikZNytniAF38wXnLkBDrQ
        hU5n9f0ZKdhb3ffMrzUAAAAASUVORK5CYII=
</value>
  </data>
</root>